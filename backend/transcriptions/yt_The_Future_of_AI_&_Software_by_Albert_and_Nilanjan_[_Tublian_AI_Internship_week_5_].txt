so that's what I've been doing um at my day job and I like playing around NLP and language models and stuff so today I we I'm going to share the platform with nanan um I would talk about a few things about AI in the future and then nanga will relate that to software building so that's what we're going to do today so when we talk about artificial intelligence we want to just uh figure out or just uh Define what intelligence is so we put these words here intelligence basically is when you have an agent that is a uh able to understand its environment so every agent operates in an environment and in this case the agent could be a human being an animal or a software so if you write a software code uh of a piece of software which is an agent it has an environment and it needs to understand what that environment is and also be able to predict and then take actions and as said do so learn from these um predictions actions and the environment to be able to adapt to have um new Behavior so as things change this agent should be able to uh change change and so you take a human being for instance um a child learns and then the child figures out okay if I've learned this next time I see this this is the action I take right and then the behavior is formed so basically then now share do what intelligent um in a basic sense will mean so we're talking about artificial intelligence I wanted to bring out AI right which is a Bast word in the news anywhere you turn you hear the word Ai and I wanted to bring this this chart here to explain what is the stack because what we hear is AI but it's more than that um where does it fit in the stack uh based on what we have learned and I'm sure some of you might have seen similar chat like this if you have been around AI before so basically what trying to say here is AI is huge it's big right it's not the the I mean it's it's the biggest picture that is the bigger picture AI is the bigger picture and within AI we have machine learning so outside of machine learning in here there are other techniques that can be applied for uh for you to experience AI So within AI we have machine learning which is also popular and then within machine learning neural networks so there are other techniques those who have been around machine learning will know this you have um rondom forest and all of the other techniques that are being used in analytics and in the practical sense but within machine learning there is what is known as neuron networks and these are very powerful but if you take a neuron Network and it has only one neuron and it has only one layer then or what is known as hidden layer then it's not that powerful it's not even different from uh SG boost or um random forest and so for a neural network actually it behaves like a human brain that's how they relate it to the experts call it behaves like a human brain but if it's very simple it's not that powerful so we also have what is known as deep learning which is a neural network but which has more more Neons and more hidden lay very complex in fact when you build a deep learning model it's not easy to explain it's always deep very very complex nobody can even it's not easy to interpret what it's doing right compared to say random for the simple techniques and then within the Deep learning there is what is known as generated a which we are in fact experiencing at the moment and then with didn't generative AI we have what's known as large language models or LS and I think most of us on this call uh what we will be interacting with will be the llm So within generative AI there llm so what I'm trying to say here is when you hear of generative a it's not only the llms but there are other techniques in the like computer vision to deal with images and videos so llm just one component of a generative um AI that is what we want to put across on this slide here and so when we talk about generative models or generative AI uh what are these basically they learn from large amount of data and they able to create new content out of what they've learned so they are trained with large amount of data and then after learning it's able to create new content basically that's what these models are when and as I said generative AI is not just um llms if it's only llms llm deal well mostly test right they are you give it test data and you generate an output which is mostly test as well but generative AI is bigger than llm as I said so it can take in images and and audio and even animations so you can give it video you can give it anything a test mostly these are converted into what is known as tokens or embedding so if you take a test you can convert it to um tokens images can be converted to tokens audio can be converted into tokens video can be as well so generative models deal with different types of data types examples are text image audio an animation so uh currently there's a talk about uh multimodal models so I explained that generative models can take um test image video recently you have models like llm that deals with test right and then you have other model that there with images videos but recently what we see is with um the advancement there there are models known as multimodal models and these ones they can process any of these data types so you can give it a test and even ask for test back so the input can be test the output can be test the input can be test and the output can be an image or video or the input can be an image and you get a test back in fact these are very powerful and recently that's what is in the market and examples are GT4 and I think the five is going to be fully multimod because um dpt4 you can give it a test and get an image back or a test back you cannot get video back as of yet Gemini from Google I think it's able to give you if you give it a test it will be able to give you video audio or images out and llama at the moment cannot do that so llama the next generation of llama Tre may be able to uh give you test give it test and get audio video out so llama is not yet a multimodal model but GPT and Gemini they are generative models that are multimodal so basically they consume different types of test I mean data and can give you different outputs so let's talk about some applications of generative AI so I from the background I've already said you could see that generative AI you can have a language model I've mentioned in llms then you can have models within the generative AI that uh that can give you or deal with video and images and then audio and then in the uh language models what are some of the things you could do and the language models so you can generate content essay generation so you go in you give it a prompt and then you can ask it to give your content it can be an essay and people who are into marketing can go and give it some prompt and then they get some marketing materials out there and then they able to do their advertising with it for people most of the people on the call here um you can generate a code right you can generate code using some of these models and um gen sequencing is an example uh that that you can use language models for so anything that is test or related to test or close to test you can use a language model uh video and image you can generate videos and so we are our Sora and the likes you can use them to generate video 3D and design image generation and then audio music recent there are a lot of models out there where you can go in just give it a prompt and you can get uh music out of it speech generation you can generate speech using some of these models and so we want to hear about the future right because I talk um has something to do with the future just give me a second let me plug in my laptop I forgot to plug it sorry about that sorry about that all right power so my computer is not going to die on me all right so we were talking about some applications and then this talk is supposed to talk about um the future of AI right and mostly when you think about the future of AI I'm not an expert so I cannot even tell what is going to happen but I'm going to um focus on what some of the experts have said about the future of AI and what they call it so mostly when you hear of the future of AI you will hear AGI artificial general intelligence so basically what these experts are defining this to be or what they are seeing is currently or even in like two years ago when you talk about AI or language models or NLP we're doing information retriever so what it is is kind of like a lookup table right uh there's information in the table and then you go in you ask a question and then the system gives you information back so basically AI was kind of information Retriever and then gradually we move into what is known as answers what we see now like Char GPT so I wanted to also um make a point here Char GPT sits on GPT so GPT is the foundational model right and it helps you so you go you give it a prom and it gives you an answer so we are in the um Realms of answering so what Jensen is saying oh from today's information retriever that what we used to do like two years ago even a year ago you moving we shifting into answers now we go we ask these uh AI systems and they're able to give us answers not just retrieving information Just for information sake but you give it a a question is able to get a context and give you an answer and then skills generation so you think about your code you write code kind of you write a code for the code to represent you somehow right because some of these systems are able to now write code right develop it's be able to build software we are gradually moving into that realm so that is the future actually part of the future is here so as we said in the beginning you cannot look at the future without looking on the past and the present so where we are the answers are here the skills generation kind of is here because you can write a code that can also write a code so software development is here and in fact I can give you an example when we started I was saying oh I'm using one of my toys I like cameras right I have a lot of cameras around me and one of these cameras what it does is it uses the human eye you cannot see it but I can see right now on my camera because it sees that there's a human being sitting in front of it it's able to figure it out this is an AI there's an AI chip actually in the camera and so but the advancement is it's not using only the eye even if I turn my back this system this chip in the camera is able to know that oh this is a human figure so AI is actually here but the AGI I don't think it's here and that's what the experts are talking about in fact there's a software I used to edit photos as well an example you go in if you take a photo and there's somebody on an object you want to remove you just need to um draw a circle or something just uh show that I want to remove this and you hit a button and then it removes it and seamless it looks like nothing was there so these AI the AI actually is here with us we see it we feel it we see it in multiple um applications so that's what it but there's a future coming where AGI will happen but nobody can tell whether is going to happen next year next two years people talk about 2020 2020 did I say 20 2030 2036 nobody can tell exactly when so Jensen also said oh the future the future AI will understand contest actually some of these they understand contest you go in you put in your FR it's not exactly what you ask but you can figure out what you're trying to get at and it will give you the answers we all know this we've dealt with charge GPT so that's what it is so part of the future actually is here and then intense so if you write maybe a code I'm sure in future you start writing a code and the code will figure out what you're trying to develop and then take over the agents will take over and then develop it and present it to you and then the say it's going to be very knowledgeable so there's knowledge here but this is going to be more powerful than what we see and we'll be able to Reon plan and perform task so you come and you give it a prompt or give it a hintch and say oh yeah I know what you want because I know and then it can reason understand what you're trying to look and then plan and in fact it looks like Tu already has bu something the T which is on on the platform kind of trying to plan and perform task so basically that agent takes over whatever you're trying to do and then write a code and come back deag it and kind of figure out what you want and present something to you so the future is going to be like that but it's going to be more perfect as J is say then there's a professor UC San Diego so he is also saying we are we are just at the ground level so we are just getting started what we see now Char GPD is powerful everybody's talking about it you think these things are just the beginning the future is going to be beyond the scope of what we can imagine and he likened it to the right brothers when they created what is known as the AE at the time uh it was fascinating right but if they were alive today they wouldn't even believe what the Aeroplane has become right we we take it for granted but for them when they created at the time um it was just maybe people didn't even believe in it was simple right but look at what has become so this professor think AI is going to be enormous and nobody can even explain what it's going to be it's just going to be powerful so if you think Char PT is powerful then what we will get maybe 10 years down the line of five years down the line is got to be more powerful and nobody can really tell you what it's going to be all that we need to do is just tag along and learn and then learn something about it and keep developing Maybe you be the one who will make it happen and then um the AI systems are available today so how different is what we have today and what we will have so what we have today actually is basically based on substantial training right we give it more data for it to learn so um the Gemini and the GPT these are train these are Big systems a lot of money was spent to train them right and they give us related answers so if it does no know anything about what you asking it canot even give you an answer so an example is if you take any of these system that exist today and you want to apply it to say medical chard or financial chard the raw system itself will not perform very well so what you need to do is to take some test data from medical um couples or medical um area and then fune what is this the foundation model right if it's a finance application you want to build you need to find tun it you need to give it more data for it to perform very well but the Next Generation which is the AGI actually will be based on U physical was going to be known as physical AI it will understand the physical word right so you don't necessarily have to train it with more data but in understanding so it will behave like a human being as we said it has a some knowledge and with that knowledge with its environment be able to understand what's going on and adapt and basically give results right give information without necessarily being trained so that's what AGI is going to be and so the artificial general intelligence actually it's going to be as I said it's going to be have human level intelligence so the day these systems will behave like me and or you that is when we can say the AGI is here but as of now it's not here because it will have self um teaching ability no we don't have to take more data to go train it for it to perform but uh the system will figure out what it its environment and be able to teach itself and then give um output out right so the software aims to be able to perform tax that is not necessarily train as I said we not going to take more data and train and spend billions on it those systems will behave like human being they have knowledge and as they leave as they move on they learn more and then bring out output and so the these are some of the characteristics of what it will possess it will be autonomous um selfcontrol nobody will be there to give it more information to behave so as I said the medical example I gave if there are new medical systems now let's say there's a medical childboard now operating in a hospital and there are new drugs develop or something or new disease coming you need to go and train it as of now that's how it's going to be but this AGI what they are predicting is it's going to be autonomous and it will be self understanding so if there will be a chatboard for uh medical system then that system would not just have to you don't have to collect data and then send the data to some database or whatever it will figure out that oh there's a new drug out there or something there's a new disease so let me figure it out so that's where it's going to be if if there will be GI for medical system that's how it will look like ability to learn new skills so new code um programming language comes out it will figure it out so if you look at the code um systems out there like the one by micro Microsoft it it's been trained so if there's a new language developed today it may not have any idea until it's traded but in the AGI um when the AGI happens really happens you don't have to send new data to retrain the whole system it will figure it out that's what they saying so we'll see if it will be here but I think AI is now even powerful for what we do it can solve complex problems and settings and context that we are not taught so basically as a child grows you don't have to put the child in the classroom to teach the child everything the child becomes knowledgeable and goes to the world and be able to function very well you leave school most of the things you were taught in school what you do at work were not taught in school but you figure them out and perform your duties as expected AGI should be able to um perform that way because it will be like a human being that's how we want to I mean the experts are predicting it to be and then for me to conclude good we are all developers we are asking ourselves if this thing is going to be that powerful then what does it mean for my job what the experts are saying so the same you see uh Professor is saying is yeah um people say it will take away job but he think um it's not going to take away jobs but jobs will change so there will be new job the the nature of job is going to change and so what he's saying is your job may not end up being very different um it's going to there's nowh like not but your job or my job what I do as a model validator it's not going to be the same thing um in 10 years or five years it will be different uh but the job is not he predict is going to be more interesting uh we we wait to see if it's going to be more interesting but I I believe I believe him if it's going to be uh different and some of the things I don't like the AI can take over that one then it's going to be interesting so what he think is jobs will change it's not like jobs will go away and there will not be any job so in the development where I think the L is going to talk about when it comes to software development what the jobs will look like um it's going to be interesting what the professor is saying the jobs will not look the same the will be jobs but if you are a developer you feel like oh I don't care about this AI then excuse me to say you may not have a job so maybe it's it's good that you're here and you're paying attention to Ai and you want to learn something about it at this point I will give it over to nanan to continue unless you have any question for maybe I can give one or two minutes for questions all right if you have any question for me or otherwise I'll give it to Nan and then um at the end of the talk do the question yeah we do the questions for that all right thanks Albert uh do you do you want me to share my screen yes let's go ahead okay don't show me this again okay can you guys see my screen yes but multiple windows okay nice Perfect all right so I've been uh if you guys been following our uh tuon feed and socials you probably know we talk about uh a lot about this now Albert did point out that it will change but what I'm going to do is that I'm going to provide my perspective it's going to be very um intentional it's going to be very um pointed because I do believe in one version of the future that I'm going to present I mean I love to hear your thoughts on this but this is what I'm describing here sorry what I'm going to describe here is what what we are what this company we're building for U for that future so I try to describe that era that we getting into is called um era of abundance abundance of intelligence now one of the characteristic of this I'm going to focus on more uh macro changes than uh micro I'm not going to talk about who they're going to be an interesting AI code generation tool or oh we going to have an our bot doing stuff like that but I'm going to focus more on macro changes because those are the changes that fundamentally changes How We Do work and and that's one of the interesting things we as Engineers should pay attention to because that's going to fundamentally change how we build how we going to build our career or how the future is going to look like now it's very difficult to predict future obviously right hindsight 2020 always but when you predict something this is this this type of innovation we have never experienced before the pace of this Innovation so the time that that we be are going to be talking about could be 6 months could be two years could be 5 years but I'm 100% convinced that this changes are going to happen now when what the the approach I'm going to take is that I'm going to try to take analogies if have we seen similar kind of changes in other fields so that we can learn from them so that's kind of going to be my objective and then I'm going to specifically dive into what how this going to affect how we build software I'm going to go very specifics in there I do believe the labor going to be a scalable resource in future now when I talk about Labor I'm talking mainly focusing on cognitive task the task that in past was completely dedicated to design for humans only humans can do those cognitive task those task will be now handled by machine now what I mean by labor scalable utility in the sense is that is almost going to be like a resource like an electricity like an energy you can plug in power up do your work and produce and consume now this what this essentially gives us into the world where we going to have an over supply of intelligence and and Albert did Define the term intelligence as a crude definition but it will solve the purpose why we are here the ability of this agents to kind of assess the environment um learn from the mistakes or action and modify the Behavior this is fundamentally different than calculators calculators have preset functions that it can use it cannot go beyond that parameters what I'm talking about is an intelligence this agents should become within set of features but can evolve into a different set of features that kind of intelligence so you can have an over supply of everything anything that can be made smart will become smart now this does create an interesting uh effects in our environment and I am very optimistic person I'm going to give you a very optimistic view of that the thing that we lack most in Cosmos is an intelligence we always had a short supply of it now imagine on your position you have this this scalable supply of an intelligence that you can plug in power up and do whatever you like to do what you will do with this energy this this excitement this over supply of intelligence the possibilities are endless because I do believe we have lots of big problems to solve in this world we have to colonize Mars cure cancer maybe automate the job that you have in your office so now you're going to have this ability on your position to drive all this stuff so I I am very optimistic about this change so is David now there is obviously the fear the Panic that we all go through is that Al alluded to a little bit what's going to happen to Engineers if if agents starts to generate code and if we get into the world of AGI what we talking about this agents not going to generate code it's going to understand the requirements can evolve understand the context of the project analyze the issues problems that agents have made in the past long from the mistake and get better and a better every day sounds like how we started our when I started my job I was a very young engineer made lots of mistakes I had I had opportunity and opportunity enough to work with really smart people I paer program they taught me how to analyze issues how to fix how we Design Systems now sounds like this what took me 10 years to do that this agents can do it in month but there is a fear and it's a very valid fear so I've been I struggled with this too while I building this community for developers because I for somehow I feel that this is my responsibility because because we have this emerging DS in our community how how will I direct them what should I tell this community that how should we prepare for the future now there are lots of interesting things in economics once you start thinking intelligence as a resource there lots of interesting idea comes in one of the things that I encountered which I really liked is called induced demand this is a classic economic fallacy or or Paradox in a way we where take a traic for an example and the most of the cities and states make that same mistake or we have lots of traffic uh traffic in that highway or freeway one way to tackle the traffic is let's add another Lane but usually what happens is when you add another Lane more cars joins that lane more people stuck in the traffic you actually waste more people's Stu so what I'm trying to say what IND demand say is that when there is a supply for something which has intense demand the demand actually goes up so more Supply you do the demand of that product that service actually goes up which is kind of very interesting now this intent demand H only happens to things that people really care so for an example people care about software they like to automate things but there are lots of people cannot do that because software is very expensive now what we saying is that in the world of abundant intelligence producing software is not going to be that expensive that means lots of people going to have access to the software what that means is that supply of the software is going up will actually increase the demand of software now it doesn't happen for all the products for an example if you if you increase this uh production of soda a pop we are from Midwest we call it pop here but rest of the world of is soda so anyway if you if you increase the production of let's say Pepsi or or or Coke that necessarily doesn't mean Who start consuming more diet COC and more Pepsi it only happens for the product and services people really want but cannot afford them so what we see is that what do I what I believe is that we're going to see this ined demand happening to our industry where increased supply of intelligence is actually going to increase demand for task that requires intelligence everybody wants that but they cannot afford it but now we are saying that we get to the point where we can do that so will AI take our jobs or the our the demand for those jobs going to go up will AI replace lawyers or or we will sue each other more will AI replace doctors or we'll expect better services from our doctors will a replace designer or will we'll expect better and more high quality design from our designers will AI replace as developers or we'll expect more High personalized high quality software from our developers we a replace the startup Founders or we'll expect the founders who should be more diverse more creative and have a better ideas and better problems to solve will Air replace writers and we see that already I mean I don't know whether you guys can I can easily make out and we do use lots of chat duty to generate our blogs and you if you go through some of the blogs I try more to personalize them but we get to the point where you can see this content is definitely generated by AI so we replace writers or we'll expect better high quality writing from our writers so I do believe that this concept of this lump of liver fallacy where we have finite number of work a finite amount of work and more AI agents coming in and do doing our work means I will have no work to do is actually wrong what I do believe going to happen is the demand of software is going to drastically go up that means there will be more work for us to do now I'm going to take this completely down to an agility in software development this is a piece of presentation a keynot presentation I did to a large group uh a couple of weeks back and they were like Professional Engineers and coach and mentors and what not so agility is um essentially fundamentally how we build software so some point down the line or you're already some of you are going to be part of a software development team right you're going to be you're going to be working for some sort of customer or some product team you're going to have a backlog you're going to building that product or solve that custom or build the custom software application and and 99% of the software teams out there use what they call as agile software development some flavor of um scrum some flavor of um XP which I'm big fan of extrem programming but there are many many flavors out there some some variation of agility and Agility has has this score for um it's called the the famous started from the famous writing from Martin Martin follow and a bunch of other groups called agile Manifesto I'm assuming all of you know about this engineer I'm pretty sure I'm assuming you guys so anyway the agile manifest kind of four things four core principles that drives it that completely focus on that uh Co collaboration over documentation uh working software over uh contract negotiation customer satisfaction over over over contract negotiation sorry what are the other four things we have here [Music] Manifesto yeah so this are the four thing individual and interactions over processing tool working software over comprehensive documentation customer collaboration over contract negotiation respond to change over following a plan okay this are done by some of this this senior thought leaders got together created this Manifesto to say hey I mean this is how we should be building software right we should be focusing on hey team members interacting with each other rather than processing tools working software with Comprehensive documentation that means hey I mean at the end of the day your software matters who cares how pretty your documentation is your product needs to work right those kind of things um so I'm going to see this are this is what drives our en industry and I wanted to focus on saying oh we're talking about the future how this thing is going to change because it's fundamentally how we work now uh one of the thing that I've been obviously thinking through here is is so I'm going to go each one of this and kind of break it down a little bit I don't know how much time we have maybe another five minutes I'm going to fly through this a little bit here then we can have some questions so first one individual and interactions so processing too so I do believe the structure of our software team is going to drastically change um those days are not far where humans going to be working with AI agents now when I say AI agents and Al butt mentioned this little bit here already is um I'm not talking about co-pilots I'm not talking about the plugins that you run on your ID prompt it do some prompt engineering generate some code I'm saying this are completely autonomous machines that working maybe behind the scene maybe background where uh you uh so you're going to have some maybe two or three developers working together and maybe three or five different AI agents and these AI agents could be all have different personas there could be an AI agent which is developer an AI agent which could perform a QA task an AI agent can perform testing all that stuff is totally totally possible I don't I don't think it sounds that crazy now does it I'm pretty sure when I talked about this last year people were like you you're going n but now it feels like totally possible in this world what I'm saying is that means this then you have to stop thinking about your how you going to be changing your your way of working when you're going to be working with not only humans but AI agents uh so your your your um as a developer your your ability to coding is very important but I think your ability of problem solving creative skills Story start to becoming very very important things to have because now you can now you have on your disposable this agents that you can direct you to solve various problems for you uh there is a two seconds demo of this some of you have already seen this this is the agent that I'm working on so I'm I'm so I'm going to pause here every one of you who's going to complete this will get access to this agent this agent while building is I was also I'm being very I always been very transparent with you guys you guys our community is kind of part of our family a Tre Community as family the ability the the power of this s for merely working for a couple of months that what we have achieved blew my mind this in this particular video I mean it's completely unedited I made it fast so that I can make it 30 seconds actual video is on 8 minutes you guys can see on our YouTube channel where we had this agent that I all I did is pointed to an issue an open open source project and and everything and and see the way we designing this essentially it goes through the steps of analyzing exactly how we work because what I'm trying to do is actually essentially creating clone of myself how I will approach an issue and can I train this agent to do something like this is exactly what's happening this is just a glimpse of what what's POS going to be possible in the future um so that's the individual ual interaction sorry I'm going to I'm going to move to the next CL I always struggle with videos in there all right so teams in um there's another aspect to this individual interaction is that uh we're going to start to have new roles the roles that doesn't exist which always worries me when uh about schools and current education system they say we are preparing kids for the future but I keep thinking do you even know what's going to happen in future I a very weird think philosophy about education system anyway so so new roles and responsibilities going to obviously appear so think about this world right you're working with humans and agents when you have ai agents in your system in your teams compliance security maybe there is an AI agent customizer role whose job is essentially to um fine-tune this agents so that they can properly work for projects it's not just qway and developers anymore the new set of new type of responsibility and roles going to come in maybe those are those are going to be the hardest job in the future personal software this is this is my favorite this is the only reason I'm in this industry working software I love to solve problems and I must say the type of softwares we build so far is very very low standard every every software we interact with the when the term the personal software came into obviously all of you heard this this term personal software the real intention behind mind was that a type of software that runs on your personal computer that means laptop but I always treated that word personal software that means hey software that that's for just me understands me works for me we never had that future the the word that I use is the same crappy word you use Excel same crappy tuon maybe maybe 30% is personalized it's still not there yet I want to make it that your tuan's going to look completely different than mine that level of personalization I think we are getting to the point where this is totally possible imagine now you guys have learned llm imagine now you're shipping your product with an llm a tiny llm building into the application from the day one it's learning about the user interaction figuring out building this model behind the scenes and then customizing the app completely based on the usage that's not totally possible this opens up completely new set of opportunities for us new type of problems that we can solve other day I was I was talking to after this presentation one older gentleman came to me said that hey my daughters are a little bit challenged right they have their issues are physically challenged so the type of computers the mouse they use is completely doesn't work the standard ones we need special customizations and you're saying after you said about personal software I completely relate to that that means totally personally now my daughters could experience type of application that is completely designed for them and and evolves with their interaction that's not possible it was impossible before because there's so much customization a software team cannot do that any s product cannot do that but now all I have to do is I know I'm simplifying things a lot all I have to do is that ship my product with a llm token that's a machine that's the intelligence that will involve with the product it's totally possible another thing is a disposable software this are some crazy ideas but I do see these things happening so long back um prous how we doing with time sorry I don't want to get carried away um okay we have we have just about 8 minutes okay cool so disposable software minutes 5 minutes okay okay okay cool cool I'm done so disposable software I'm going to skip demo and disposable software this idea that really resonated with me is this concept of uh creating software on demand now if you look at code bases and code inventory you'll see that it's it's a nightmare to manage Legacy code bases it's a cost center it takes M millions of dollars to manage them companies struggle with them and the code has this tendency of rotting doesn't matter how well design your code is 6 months one one your down the line the code will stuff is smell it will rot this is the nature of the software your teams will change new team will come they have no idea how this code works and you have stuck with this unable giant code base the idea of disposable software is what if we don't have to what if we don't need to manage code we'll just generate code any every time we need something because hey code generation is cheap now earlier it was very expensive to generate C now it's dozen I'm a prompt I can I can get hundreds of line generated now this idea just because of the software came to this mind that now anyone can have this ability of hey I need I I need there is a demo I'll share this with you guys so you can see this so that I will save some time that uh all all users have to do is prompt hey I'm looking for this that will solve this problem and that problem could be uh take the data from my my sales data uh uh forecast this for me create an app nice chart then uh ship it to this or hey I need this this automation which will take all the photos of my library tur it into this then create an album sorted by this and create this nice video for me all this could be just a prompt away so disposable once you use it after that you just trash it there is a video for this definitely watch that when you have time malleable software is another aspect that we're going to come in which is the idea of giving user the control um I do believe in some that is even crazier than what I said so far is that I do believe in future everyone will have an ability to code the definition of coding uh the definition of developers will drastically change but ability for anyone to generate a code or build an application everyone would have that so we almost get get to the wall like a good analogy would be soccer everybody kind of played soccer in their life or plays soccer but they are pro soccer players and they're amateurs so everybody's going to have this I I know how to do this but there will be certain professional software developers which are you guys here uh this always has been tricky because now uh allowing users to edit the state of art right now is we provide apis but API has such a high hardle and bar to expect from user not everybody can do it API and I cannot sometimes understand what product API to use um how can we expect users to invoke API to customize but again llm can solves that problem right we can imagine every software has this prompt window that users can type in to do whatever user wants and then prompt and llm will drive and automatically change the application for them that's totally possible uh this is a good example of that with programmable documents uh customer collaboration I don't know whether you guys are very interested essentially this is where if you are working on a software product team you always have a customer right even if you're producting your users are customer if you're building you're working for a consulting company then the person that paying you money to build that custom app is your customer traditionally uh most of the Consulting companies this is mainly for Consulting companies are very specific about contract so you said you're going to give us half a million dollar for six months to build this we spend half a million dollar six months here is a product and customizer say this is not what I want I want something else and there's always this motion this struggle that happens in every software project which is annoying frustrating because we all want to do a good job now we're going to have this ability of kind of predictive and transparent imagine not only I mean I want to use this right now this was this was only available for Google of the world but anyone can use it now imagine now you your your AI you are running an AI model that predicts the user interaction on Tuan and based on that it also knows my backlog of the product and based on that it could say hey the feature that you've been thinking to build three months down the line you should do it right now because users are looking for it that kind of analysis that kind of data crunching is impossible unless you have lots of money and lots of resources now anyone can do that uh we talked about the last one on agile Manifesto is respond to change right change is the only constant world is changing users behavior is changing interactions are changing every company needs to adapt to change right every how fast we can move now we we going to have this ability imagine a product developer we might have we used to have lots of non- technical folks in our community I don't know about that right now but imagine if you're a product developer a a product manager now you're going to have this ability of uh hey I can uh can I get borrow those two AI agents I want to AB test something I have this crazy idea I got lot yesterday I want to experiment with this now you can quickly generate code Run 10 different experiments and quickly Lear from the market I this this was never possible before we getting into point so in a not what I'm trying to say I'm wrapping up almost done here AI is essentially democratizing software development the things that only handful of very fortunate people have access to now it's available to everyone that that that plugable resource that that supply of an intelligence at your disposable every industry what this fundamentally changes is that every industry every Market everything going to become a software Market the size of software Market is what around one 150 billion is going to be 10x in few years 10x um this another analogy you can think about i' I've been into the industry for sometime I know how the things work right so um imagine every company go to every product Consulting business insurance Banks doesn't matter Albert if you ask Albert right now in their bank they have 100 projects in their backlog they cannot get done for a couple of reasons one they don't have enough people to do it second uh those projects going to cost lots of money guess what a is solving both of them you don't have to um me lots of people anymore you can have some human some agents do that oh software producing software projects not going to cost that money you can't do that that's going to unleash new set of work new set of opportunities all coming for you guys all you have to do now is figured out how you can build software at scale that's why I'm so hung into this idea that we all have to quickly figure out that we got to we got to figure out how we can execute multiple projects at the center how can we do things faster than what we do right now because as software is getting cheaper the amount of money you can expect from your jobs going drastically go down drastically go down then we have to figure out an option I mean there is certain amount of money I need to survive if software is not if one project is not doing giving me that much money um I have to figure out how can I do multiple projects without without hiring a large Team without hiring all this overhead how can I do that so that's this is our challenge for the future this is the real challenge we have in the industry not software sticking our job that's not the challenge challenge is how can we handle this huge demand that's going to come in our way in few months or is already here some places so when you into this world of future of AI or software what I call is an era of abundant intelligence your your ambition is the most clear asset whatever you thinking today whatever you're thinking too small too small you can do more with that I'm going to end my presentation here thank you uh precious can do we have any questions yeah thank you very much I think I think there was a question this is not precious but Nan I wanted to I think Raymond is it Raymond ask a question about oh what AI have you implemented actually if you look at um um slide three I I show the AI St right AI very broad so in the bank there are AI applications there a lot of them in fact predictions model machine learning models are there but I want to say banks are slow to adopt uh technology because of uh regulations so specifically I can't tell you about there are a lot of models if you go to the marketing department you go to compliance Department all of there are a lot of NLP projects out there being used and in fact predict models like um sgb and random forest run the marketing models right so they are there they are there practically but when it comes to say CH GPT is slow right GPT type of models they cannot just Implement them right away so that will be maybe my answer to you yeah oh yeah thank you very much Al aboutt for answering that question so yeah I don't know if there's any other question I not seeing any other one okay so thank you very much everyone so first I mean so update on the intership thank you Al thank you nanan so just a quick update on the intership um this is the fifth week and this week you are going to get the Capstone project but just um just a quick one today we are closing the um the link the portal for submission of your AI bot project so the first project you are given today is the last day today is the deadline to submit it the last time we checked I saw that over 50 people have submitted and um I believe there a lot of people also had the weekend to work on their own and then now that they are they are willing to submit so please make sure you submit us today it's very very important also as we on this call you can take a screenshot of what is going on here and then you know just share what you've learned today on social media Twitter LinkedIn anywhere you know it will be I mean celebrate yourself it's 5 weeks man five weeks of learning it's not been easy because I know some people started without even having any knowledge on AI but here you are today you're already almost a pro right so yeah um so the last thing is that our Capstone project will be coming to you this week once it is ready you're going to get an email with your Capstone project um of course you know the way we do it if you go on your dashboard it will be on the challenge section of the dashboard but I will send you a mail saying oh it's live you can check the link then the class for last week which is the one with Grant was moved to next week so next week we are going to have that session and then um I'm going to make sure that each and every one of you get a message saying oh today is the session so next week is not going to be on a Monday it's going to be on a Wes day so sorry about that but next week Wednesday we are going to have that session so thank you very much everyone thank you very much for coming we really appreciate and then yeah I hope to review your yeah demo sessions on Thursday this week Thursday we're going to have a demo session please so we are doing it on the first confer Ser um Basics so if you had submitted early if you submitted your um project early your chances of being called for a demo will be high right so what we are doing is that we are um we are going to send email to those that will be presenting so we have like a spreadsheet and say oh these are people that will be presenting so you just come on that day you demo show us how it works you don't need to do a long thing just show us how it works show us okay run the project and then use it on a call just so that we see it so yeah thank you very much everyone um yeah I think we are good to go well thank you for coming for yeah thank you for coming to today's session I really appreciate enjoy the rest of your day bye-bye bye